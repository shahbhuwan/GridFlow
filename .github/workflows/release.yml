name: Build and Release on Tag Push

on:
  push:
    tags:
      - 'v*' # Trigger on tags

jobs:
  build:
    # Use a build matrix to run the job on Windows, macOS, and Ubuntu
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libegl1-mesa libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 qt5-qpa-plugins

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install pyinstaller

      - name: Build Standalone Executable
        run: python build_executable.py

      - name: Package the application
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            7z a "GridFlow-Windows.zip" "./dist/GridFlow.exe"
            echo "ASSET_PATH=GridFlow-Windows.zip" >> $GITHUB_ENV
            echo "ASSET_NAME=GridFlow-Windows.zip" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            mv dist/GridFlow dist/GridFlow.app
            zip -r "GridFlow-macOS.zip" "./dist/GridFlow.app"
            echo "ASSET_PATH=GridFlow-macOS.zip" >> $GITHUB_ENV
            echo "ASSET_NAME=GridFlow-macOS.zip" >> $GITHUB_ENV
          else # Linux
            mv dist/GridFlow dist/GridFlow-Linux
            tar -czvf "GridFlow-Linux.tar.gz" "./dist/GridFlow-Linux"
            echo "ASSET_PATH=GridFlow-Linux.tar.gz" >> $GITHUB_ENV
            echo "ASSET_NAME=GridFlow-Linux.tar.gz" >> $GITHUB_ENV
          fi

      - name: Create Release
        if: runner.os == 'Ubuntu-latest'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: GridFlow ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}.
            Assets built by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          tag: ${{ github.ref }}
          overwrite: true
